[include main/START_PRINT.cfg]
[include WIPE_NOZZLE.cfg]
# [include macros/G1.cfg]

[gcode_macro EXTRUDE_FILAMENT_50]
description: Extrude 50mm of Filament of Extruder Calibration
gcode:
  G91
  G1 E50 F60
  
[gcode_macro HOME_CHECK]
description: Checks if the printer is homed, if not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}

[gcode_macro SHOW_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    # HOME_CHECK
    {% set z_lift = params.z_lift|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ z_lift, z_diff ] | min%}
    G1 Z{ z_safe_lift }
    G1 X10 Y220 F4000

[gcode_macro START_POSITION]
gcode:
    G1 X5 Y20 Z0.28 F5000.0 ;Move to start position

[gcode_macro LINE_PURGE]
gcode:
    G1 X5 Y145.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X5.4 Y145.0 Z0.28 F5000.0 ;Move to side a little
    G1 X5.4 Y20 Z0.28 F1500.0 E30 ;Draw the second line
    
[gcode_macro END_PRINT]
gcode:
    G91 ;Relative Positioning
    G1 E-2 F2700 ;Retract a bit 
    G1 E-2 Z0.2 F2400 ;Retract and raise Z 
    G1 X5 Y5 F3000 ;Wipe out 
    G1 Z10 ;Raise Z more 
    
    G90 ;Absolute positionning 
    G1 X0 Y220 ;Present print 
    M106 S0 ;Turn-off fan 
    M104 S0 ;Turn-off hotend 
    M140 S0 ;Turn-off bed 
     
    M84 X Y E ;Disable all steppers but Z

    
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    G91
    G1 Z2
    G90
    G1 F3000X0Y220
    M104 S0
    M140 S0
    M107
    M84
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    SHOW_PRINT

[gcode_macro PRINTER_PARAM]
variable_max_x_position: 220.0
variable_max_y_position: 220.0
variable_max_z_position: 250.0
variable_z_safe_pause: 0.0
variable_g28_extruder_temp: 140
variable_fan0_min: 35
variable_z_safe_g28: 10.0
variable_fans: 1
gcode:

[gcode_macro PRINT_CALIBRATION]
# This part of the command is replaced by the application side without passing parameters
gcode:
  CX_PRINT_LEVELING_CALIBRATION

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    # {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    # {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}

    {% set x_park = 0 %}
    {% set y_park = 222 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < 48.0 %}
        {% set z_safe = 50.0 - act_z %}
    {% elif act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=z_safe_pause VALUE={z_safe|float}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F600
      M400
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    {% set z_resume_move = printer['gcode_macro PRINTER_PARAM'].z_safe_pause|int %}
    {% if z_resume_move > 2 %}
      {% set z_resume_move = z_resume_move - 2 %}
      G91
      G1 Z-{z_resume_move} F600
      M400
    {% endif %}

    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESUME_BASE {get_params}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}
  
[gcode_macro pid_nozzle]
gcode:
  TURN_OFF_HEATERS
  PID_CALIBRATE HEATER=extruder TARGET=230
  SAVE_CONFIG

[gcode_macro pid_bed]
gcode:
  TURN_OFF_HEATERS
  PID_CALIBRATE HEATER=heater_bed TARGET=65
  SAVE_CONFIG

# Bed Mesh - Auto Leveling
[gcode_macro G29]
gcode:
  M204 S5000
  G90
  G28
  PRTOUCH_PROBE_ZOFFSET
  M104S0
  M107
  G28 Z
  BED_MESH_CALIBRATE
  G1 X110Y110Z10
  M140S0
  #CXSAVE_CONFIG
  SAVE_CONFIG

[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 240 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                   # Relative coords
    G1 E50 F{ 5 * 60 }  # extrude
    G4 P{ 0.9 * 1000 }    # dwell (ms)
    G1 E25.0 F{ 5 * 60 }  # extrude a little more
    # _ENABLE_FS
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 240 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set z_lift = params.z_lift|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ z_lift, z_diff ] | min%}
 
    G91                   # relative positioning
    G0 Z{ z_safe_lift }
    # Reset extruder position
    G92 E0
    G1 E5.0 F300        # extrude a little
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 5 * 60 }   # finish the unload
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}

[gcode_macro HEAT]
description: Heats up the extruder to get ready for Filament Change
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=240
  HOME_CHECK
  G1 Z10 F3000

[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 240 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E45.0 F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}

[gcode_macro COOL]
description: Turns off all heaters
gcode:
  TURN_OFF_HEATERS

# [gcode_macro INPUTSHAPER_X]
# gcode:
#   M84
#   G90
#   G28
#   SHAPER_CALIBRATE AXIS=x
#   #CXSAVE_CONFIG
#   SAVE_CONFIG

# [gcode_macro INPUTSHAPER_Y]
# gcode:
#   M84
#   G90
#   G28
#   SHAPER_CALIBRATE AXIS=y
#   #CXSAVE_CONFIG
#   SAVE_CONFIG
  
# [gcode_macro AUTOTUNE_SHAPERS]
# variable_autotune_shapers: 'mzv'
# gcode:

# [gcode_macro Z_OFFSET_TEST]
# gcode:
#   # Z_OFFSET_AUTO
#   G28
#   # NOZZLE_CLEAR
#   Z_OFFSET_CALIBRATION
#   #CXSAVE_CONFIG
#   SAVE_CONFIG

# [gcode_macro ZZ_OFFSET_TEST]
# gcode:
#   G28
#   Z_OFFSET_AUTO
#   # NOZZLE_CLEAR
#   # Z_OFFSET_CALIBRATION
#   #CXSAVE_CONFIG
#   SAVE_CONFIG

# [gcode_macro _IF_HOME_Z]
# gcode:
#   # BED_MESH_SET_DISABLE
#   {% if printer['gcode_macro xyz_ready'].z_ready|int == 1 %}
#     {% if printer.toolhead.position.z|int < 10 %}
#       {% set z_park = 10.0 - printer.toolhead.position.z|int %}
#       G91
#       G1 z{z_park} F600
#       G90
#     {% endif %}
#   {% else %}
#     {% if printer['gcode_macro xyz_ready'].z_moved|int == 0 %}
#       # BED_MESH_SET_DISABLE
#       # FORCE_MOVE STEPPER=stepper_z DISTANCE={printer["gcode_macro PRINTER_PARAM"].z_safe_g28} VELOCITY=10
#       SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=z_moved VALUE=1
#     {% endif %}
#   {% endif %}

# [gcode_macro _IF_MOVE_X]
# gcode:
#   # BED_MESH_SET_DISABLE
#   {% if printer['gcode_macro xyz_ready'].x_moved|int == 0 %}
#     {% if printer['gcode_macro xyz_ready'].y_moved|int == 0 %}
#       {% set SAFE_Z = printer['gcode_macro xyz_ready'].safe_z|int%}
#       FORCE_MOVE STEPPER=stepper_z DISTANCE={SAFE_Z} VELOCITY=20
#     {% endif %}
#     FORCE_MOVE STEPPER=stepper_x DISTANCE=10 VELOCITY=20
#     SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=x_moved VALUE=1
#   {% endif %}

# [gcode_macro _IF_MOVE_Y]
# gcode:
#   # BED_MESH_SET_DISABLE
#   {% if printer['gcode_macro xyz_ready'].y_moved|int == 0 %}
#     {% if printer['gcode_macro xyz_ready'].x_moved|int == 0 %}
#       {% set SAFE_Z =printer['gcode_macro xyz_ready'].safe_z|int%}
#       FORCE_MOVE STEPPER=stepper_z DISTANCE={SAFE_Z} VELOCITY=20
#     {% endif %}
#     FORCE_MOVE STEPPER=stepper_y DISTANCE=10 VELOCITY=20
#     SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=y_moved VALUE=1
#   {% endif %}


# [gcode_macro _HOME_X]
# gcode:
#    _IF_MOVE_X
#   G28 X
#   SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=x_ready VALUE=1
#   G1 x10 F4800
#   G28 x
#   G91 X5 F2000
#   G90
#   # Wait just a second (give StallGuard registers time to clear)
#   # G4 P2000

# [gcode_macro _HOME_Y]
# gcode:
#    _IF_MOVE_Y
#   # SET_TMC_FIELD FIELD=SGTHRS STEPPER=stepper_y VALUE=85
#   G28 Y
#   SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=y_ready VALUE=1
#   G1 Y10 F4800
#   G28 Y
#   G91
#   G1 y5 F2000
#   G90
#   # Wait just a second (give StallGuard registers time to clear)
#   # G4 P2000

# [gcode_macro _HOME_Z]
# gcode:
#   {% if printer['gcode_macro xyz_ready'].y_ready|int == 1 %}
#     {% if printer['gcode_macro xyz_ready'].x_ready|int == 1 %}
#       _IF_HOME_Z
#     {% endif %}
#   {% endif %}
#   {% if printer['gcode_macro xyz_ready'].x_ready|int == 0 %}
#     _HOME_X
#   {% endif %}
#   {% if printer['gcode_macro xyz_ready'].y_ready|int == 0 %}
#     _HOME_Y
#   {% endif %}
#   G90
#   {% set bl_offset = printer.configfile.settings['bltouch'] %}
#   {% set x_park = printer['gcode_macro PRINTER_PARAM'].max_x_position/2 - bl_offset.x_offset %}
#   {% set y_park = printer['gcode_macro PRINTER_PARAM'].max_y_position/2 - bl_offset.y_offset %}
#   {action_respond_info("x_park = %s \n" % (x_park))}
#   {action_respond_info("y_park = %s \n" % (y_park))}
#   G1 x{x_park} y{y_park} F6000
#   G4 P500 # P1000

#   G28 Z
#   SET_GCODE_VARIABLE MACRO=xyz_ready VARIABLE=z_ready VALUE=1
#   G1 X110Y110Z5 F2400

